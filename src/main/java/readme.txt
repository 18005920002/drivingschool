Enroll项目主要用户管理用户的报名登记信息采集

该项目基于SpringBoot进行构建，包含以下主要功能：

1.权限管理
	使用基于URL的访问控制实现认证和授权
	
	1.1用户认证：用户访问系统，系统校验用户身份的合法性。支持用户名密码认证、指纹认证、数字证书认证、安全介质等。系统验证用户身份合法，用户方可访问系统资源。
	
	1.2用户授权：用户认证通过后，系统对用户访问的资源进行控制，用户具有资源的访问权限方可访问。（访问控制）
	
	1.3认证流程：用户访问系统资源
		--|允许匿名访问（6不用认证） -- 继续
		--|不允许匿名 
			--|认证通过	--继续
			--|认证不通过 	--返回认证
	
	1.4认证的核心要素：
	subject: 主体信息（用户，可能是程序，是访问系统资源的对象）
	principal: 身份信息（用户名、身份标识等，通常可以有多个，但只能有一个主身份信息，primary principal）
	credential:凭证信息（密码、证书、指纹等）
	主体在进行身份认证时需要提供身份信息和凭证信息
	
	1.5 授权流程：用户通过身份认证 ，who对what进行how操作
		访问控制：分配访问权限
			|--有访问权限 	--访问
			|--无访问权限	--拒绝
	1.6 授权的核心要素:
	who		-- subject
	what	-- resource 资源，比如用户列表页面，ID为001的商品信息。subject必须具备资源的访问权限方可访问该资源
		资源类型：系统的用户信息，相当与Java类
		资源实例：ID为001的用户，相当于Java对象
	how		-- permission 权限/许可，比如用户添加、用户修改、商品删除。针对资源的权限或许可，subject具有permission才能访问/操作。
		需要定义permission。
	
	1.7分配权限
	用户需要分配相应的权限才可以访问资源。
	
	1.8权限模型
	用户
	资源
	权限
	角色
	用户--------角色--------权限--/--资源
	  \       / \       /
	   \     /   \     /
		用户角色	      角色权限

	1.9权限控制（授权的核心）
		1.9.1  基于角色的访问控制【RBAC】 Role Based Access Controll
			部门经理、总经理
			if(user.hasRole(部门经理)){
				//访问资源
			}
			[*]角色基于人来划分，人作为用户在系统中属于活动内容，经常发生变更，需要频繁修改代码，不利于系统维护
			
			
		1.9.2 基于资源的访问控制【RBAC】Resource Based Access Controll
			类中的方法，页面中的按钮
			if(user.hasPermission(查看报表)){
				//访问资源
			}
			
			[*]资源在系统是不变的（相对稳定的），该方法不需要频繁修改代码。如果需要变更权限，只要在权限分配模块去分配。
			
	 
			
	